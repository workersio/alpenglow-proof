\* TLC MODEL CONFIGURATION — quick sanity model for auditors
SPECIFICATION Spec

\* Model values
CONSTANTS
    v1 = v1
    v2 = v2
    v3 = v3
    v4 = v4
    b0 = b0
    b1 = b1
    b2 = b2
    b3 = b3
    b4 = b4
    b5 = b5
    nullBlock = nullBlock

\* Assign values to constants (mirrors §1.5, reduced so TLC finishes fast)
CONSTANTS
    NumValidators = 4
    ByzantineCount = 1
    GST = 3
    MaxSlot = 2      \* Increased for more robust checking
    MaxBlocks = 3    \* Increased for more robust checking
    DeltaTimeout = 1
    DeltaBlock = 1
    WindowSize = 2
    RotorFanout = 2  \* Increased for more robust checking
    RotorMinRelayStake = 40
    RotorGamma = 1
    RotorMaxFailedRelayStake = 10
    GammaTotalShreds = 6
    GammaDataShreds = 3
    KappaExpRatio = 2
    MaxSlicesPerBlock = 2

    Validators = {v1, v2, v3, v4}
    Slots = {0, 1, 2}
    BlockHashes = {b0, b1, b2, b3, b4, b5}
    NoBlock = nullBlock
    GenesisHash = b0
    LeaderSchedule <- MC_LeaderSchedule
    
    \* Use the function defined in MC.tla
    StakeMap <- MC_StakeMap

\* Invariants - ALL critical safety properties
INVARIANTS
    TypeInvariant
    SafetyInvariant        \* THEOREM 1: Finalized blocks lie on one chain
    NoConflictingFinalization
    ChainConsistency
    VoteUniqueness         \* LEMMA 20: At most one initial vote per slot
    UniqueNotarization     \* LEMMA 24: At most one block notarized per slot
    GlobalNotarizationUniqueness
    FinalizedImpliesNotarized  \* LEMMA 25: Finalized blocks were notarized
    CertificateNonEquivocation \* Certificates cannot equivocate
    ByzantineStakeOK       \* Byzantine stake < 20%
    PoolMultiplicityOK
    PoolCertificateUniqueness
    RotorSelectSoundness

\* State constraint
CONSTRAINT StateConstraint

\* Liveness properties (bounded TLC check; relies on partial synchrony and
\* weak fairness assumptions encoded in Spec and parameters GST/Delta).
PROPERTIES
    EventualFinalization
    Progress