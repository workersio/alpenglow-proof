\* TLC MODEL CONFIGURATION — quick sanity model for auditors
SPECIFICATION Spec

\* Model values
CONSTANTS
    v1 = v1
    v2 = v2
    v3 = v3
    b0 = b0
    b1 = b1
    b2 = b2
    b3 = b3
    b4 = b4
    b5 = b5
    nullBlock = nullBlock

\* Assign values to constants (mirrors §1.5, reduced so TLC finishes fast)
CONSTANTS
    NumValidators = 2
    ByzantineCount = 0
    GST = 2
    MaxSlot = 1      \* Minimized for fast checking
    MaxBlocks = 2    \* Limit block proliferation
    DeltaTimeout = 1 \* Reduced from 2
    DeltaBlock = 1
    WindowSize = 2
    RotorFanout = 1
    RotorMinRelayStake = 40
    RotorGamma = 1
    
    Validators = {v1, v2}
    Slots = {0, 1}
    BlockHashes = {b0, b1, b2, b3}
    NoBlock = nullBlock
    GenesisHash = b0
    LeaderSchedule <- MC_LeaderSchedule
    
    \* Use the function defined in MC.tla
    StakeMap <- MC_StakeMap

\* Invariants - ALL critical safety properties
INVARIANTS
    TypeInvariant
    SafetyInvariant        \* THEOREM 1: Finalized blocks lie on one chain
    NoConflictingFinalization
    ChainConsistency
    VoteUniqueness         \* LEMMA 20: At most one initial vote per slot
    UniqueNotarization     \* LEMMA 24: At most one block notarized per slot
    GlobalNotarizationUniqueness
    FinalizedImpliesNotarized  \* LEMMA 25: Finalized blocks were notarized
    CertificateNonEquivocation \* Certificates cannot equivocate
    ByzantineStakeOK       \* Byzantine stake < 20%
    PoolMultiplicityOK
    PoolCertificateUniqueness

\* State constraint
CONSTRAINT StateConstraint

\* Liveness properties (bounded TLC check; relies on partial synchrony and
\* weak fairness assumptions encoded in Spec and parameters GST/Delta).
PROPERTIES
    EventualFinalization
    Progress
