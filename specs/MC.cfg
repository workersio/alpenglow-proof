\* TLC MODEL CONFIGURATION — quick sanity model for auditors
\* To run the audit-recommended skipped-slot scenario, change Spec to SkippedSlotSpec.
SPECIFICATION Spec

\* Model values
CONSTANTS
    v1 = v1
    v2 = v2
    v3 = v3
    v4 = v4
    b0 = b0
    b1 = b1
    b2 = b2
    b3 = b3
    b4 = b4
    b5 = b5
    nullBlock = nullBlock

\* Assign values to constants (mirrors §1.5, reduced so TLC finishes fast)
CONSTANTS
    NumValidators = 4
    ByzantineCount = 1
    GST = 3
    MaxSlot = 2      \* Increased for more robust checking
    MaxBlocks = 3    \* Increased for more robust checking
    \* Timing params sized for fast TLC exploration only — not real-world latencies
    \* See Whitepaper Def. 17 for semantics and units relative to `clock`.
    DeltaTimeout = 1
    DeltaBlock = 1
    \* Latency parameters for bounded-time finalization (δ_θ bounds)
    Delta80 = 6
    Delta60 = 4
    WindowSize = 2
    RotorFanout = 2  \* Increased for more robust checking
    RotorMinRelayStake = 40
    RotorGamma = 1
    RotorMaxFailedRelayStake = 10
    GammaTotalShreds = 6
    GammaDataShreds = 3
    KappaExpRatio = 2
    Validators = {v1, v2, v3, v4}
    Slots = {0, 1, 2}
    BlockHashes = {b0, b1, b2, b3, b4, b5}
    NoBlock = nullBlock
    GenesisHash = b0
    WindowLeader <- MC_WindowLeader
    
    \* Use the function defined in MC.tla
    StakeMap <- MC_StakeMap

\* Invariants - ALL critical safety properties
INVARIANTS
    Invariant

\* State constraint
CONSTRAINT StateConstraint

\* Liveness properties (bounded TLC check; relies on partial synchrony and
\* weak fairness assumptions encoded in Spec and parameters GST/Delta).
PROPERTIES
    BasicLiveness
    FastPathOneRound
    Progress
    WindowFinalizationAll
    Liveness60Responsive
    CrashToleranceLiveness20
    RepairEventuallySucceeds
